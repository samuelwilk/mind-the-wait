services:
  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
  ###< doctrine/doctrine-bundle ###

  php:
    build:
      context: .
      dockerfile: docker/Dockerfile
    environment:
      APP_ENV: ${APP_ENV}
      COMPOSER_HOME: /tmp
    volumes:
      - ./:/var/www/app:cached
    depends_on:
      - database

  nginx:
    image: nginx:1.27
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./:/var/www/app:ro
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/certs:/etc/nginx/certs:ro
    depends_on:
      - php

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10

  pyparser:
    build:
      context: .
      dockerfile: docker/pyparser.Dockerfile
    environment:
      REDIS_URL: redis://redis:6379
      VEH_URL: "https://saskprdtmgtfs.sasktrpcloud.com/TMGTFSRealTimeWebService/Vehicle/VehiclePositions.pb"
      TRIP_URL: "https://saskprdtmgtfs.sasktrpcloud.com/TMGTFSRealTimeWebService/TripUpdate/TripUpdates.pb"
      ALERT_URL: "https://saskprdtmgtfs.sasktrpcloud.com/TMGTFSRealTimeWebService/Alert/Alerts.pb"
      POLL_SEC: "12"
    depends_on:
      - redis
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - php
      - redis
    working_dir: /var/www/app
    # was: "php bin/console messenger:consume redis -vv"
    command: bash -lc "php bin/console messenger:consume async -vv --time-limit=3600 --memory-limit=256M --sleep=1"
    volumes:
      - ./:/var/www/app:cached
    environment:
      APP_ENV: ${APP_ENV}
      # This is optional because Symfony loads .env.local inside the container,
      # but it doesn't hurt to be explicit for the worker:
      MESSENGER_TRANSPORT_DSN: ${MESSENGER_TRANSPORT_DSN}

  scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - php
      - redis
    working_dir: /var/www/app
    command: bash -lc 'while true; do php bin/console app:score:tick || true; sleep 30; done'
    volumes:
      - ./:/var/www/app:cached
    environment:
      APP_ENV: ${APP_ENV}

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
