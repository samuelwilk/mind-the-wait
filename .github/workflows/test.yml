name: Test & Lint

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  php-cs-fixer:
    name: PHP CS Fixer
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_pgsql, redis

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP CS Fixer (dry run)
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

  phpunit:
    name: PHPUnit Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: mindthewait_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_pgsql, redis
          coverage: pcov

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run database migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/mindthewait_test
          REDIS_URL: redis://localhost:6379
          OPENAI_API_KEY: test-key

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --coverage-text
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/mindthewait_test
          REDIS_URL: redis://localhost:6379
          OPENAI_API_KEY: test-key

  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build PHP image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: frankenphp_prod
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Python parser image
        uses: docker/build-push-action@v5
        with:
          context: ./pyparser
          file: ./pyparser/Dockerfile
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
